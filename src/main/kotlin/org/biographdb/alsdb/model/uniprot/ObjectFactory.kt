//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.04.03 at 08:09:53 AM PDT 
//
package org.biographdb.alsdb.model.uniprot

import org.biographdb.alsdb.model.uniprot.CommentType.*
import org.biographdb.alsdb.model.uniprot.OrganismType.Lineage
import org.biographdb.alsdb.model.uniprot.ProteinType.*
import org.biographdb.alsdb.model.uniprot.SourceDataType.*
import javax.xml.bind.JAXBElement
import javax.xml.bind.annotation.XmlElementDecl
import javax.xml.bind.annotation.XmlRegistry
import javax.xml.namespace.QName

/**
 * This object contains factory methods for each
 * Java content interface and Java element interface
 * generated in the org.biographdb.alsdb.model.uniprot package.
 *
 * An ObjectFactory allows you to programatically
 * construct new instances of the Java representation
 * for XML content. The Java representation of XML
 * content can consist of schema derived interfaces
 * and classes representing the binding of schema
 * type definitions, element declarations and model
 * groups.  Factory methods for each of these are
 * provided in this class.
 *
 */
@XmlRegistry
class ObjectFactory
/**
 * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.biographdb.alsdb.model.uniprot
 *
 */
{
    /**
     * Create an instance of [SourceDataType]
     *
     */
    fun createSourceDataType(): SourceDataType {
        return SourceDataType()
    }

    /**
     * Create an instance of [IsoformType]
     *
     */
    fun createIsoformType(): IsoformType {
        return IsoformType()
    }

    /**
     * Create an instance of [CommentType]
     *
     */
    fun createCommentType(): CommentType {
        return CommentType()
    }

    /**
     * Create an instance of [CommentType.Conflict]
     *
     */
    fun createCommentTypeConflict(): Conflict {
        return Conflict()
    }

    /**
     * Create an instance of [OrganismType]
     *
     */
    fun createOrganismType(): OrganismType {
        return OrganismType()
    }

    /**
     * Create an instance of [ProteinType]
     *
     */
    fun createProteinType(): ProteinType {
        return ProteinType()
    }

    /**
     * Create an instance of [Entry]
     *
     */
    fun createEntry(): Entry {
        return Entry()
    }

    /**
     * Create an instance of [GeneType]
     *
     */
    fun createGeneType(): GeneType {
        return GeneType()
    }

    /**
     * Create an instance of [GeneLocationType]
     *
     */
    fun createGeneLocationType(): GeneLocationType {
        return GeneLocationType()
    }

    /**
     * Create an instance of [ReferenceType]
     *
     */
    fun createReferenceType(): ReferenceType {
        return ReferenceType()
    }

    /**
     * Create an instance of [DbReferenceType]
     *
     */
    fun createDbReferenceType(): DbReferenceType {
        return DbReferenceType()
    }

    /**
     * Create an instance of [ProteinExistenceType]
     *
     */
    fun createProteinExistenceType(): ProteinExistenceType {
        return ProteinExistenceType()
    }

    /**
     * Create an instance of [KeywordType]
     *
     */
    fun createKeywordType(): KeywordType {
        return KeywordType()
    }

    /**
     * Create an instance of [FeatureType]
     *
     */
    fun createFeatureType(): FeatureType {
        return FeatureType()
    }

    /**
     * Create an instance of [EvidenceType]
     *
     */
    fun createEvidenceType(): EvidenceType {
        return EvidenceType()
    }

    /**
     * Create an instance of [SequenceType]
     *
     */
    fun createSequenceType(): SequenceType {
        return SequenceType()
    }

    /**
     * Create an instance of [Uniprot]
     *
     */
    fun createUniprot(): Uniprot {
        return Uniprot()
    }

    /**
     * Create an instance of [StatusType]
     *
     */
    fun createStatusType(): StatusType {
        return StatusType()
    }

    /**
     * Create an instance of [PositionType]
     *
     */
    fun createPositionType(): PositionType {
        return PositionType()
    }

    /**
     * Create an instance of [ConsortiumType]
     *
     */
    fun createConsortiumType(): ConsortiumType {
        return ConsortiumType()
    }

    /**
     * Create an instance of [GeneNameType]
     *
     */
    fun createGeneNameType(): GeneNameType {
        return GeneNameType()
    }

    /**
     * Create an instance of [LocationType]
     *
     */
    fun createLocationType(): LocationType {
        return LocationType()
    }

    /**
     * Create an instance of [CitationType]
     *
     */
    fun createCitationType(): CitationType {
        return CitationType()
    }

    /**
     * Create an instance of [PropertyType]
     *
     */
    fun createPropertyType(): PropertyType {
        return PropertyType()
    }

    /**
     * Create an instance of [PhysiologicalReactionType]
     *
     */
    fun createPhysiologicalReactionType(): PhysiologicalReactionType {
        return PhysiologicalReactionType()
    }

    /**
     * Create an instance of [CofactorType]
     *
     */
    fun createCofactorType(): CofactorType {
        return CofactorType()
    }

    /**
     * Create an instance of [EvidencedStringType]
     *
     */
    fun createEvidencedStringType(): EvidencedStringType {
        return EvidencedStringType()
    }

    /**
     * Create an instance of [PersonType]
     *
     */
    fun createPersonType(): PersonType {
        return PersonType()
    }

    /**
     * Create an instance of [ImportedFromType]
     *
     */
    fun createImportedFromType(): ImportedFromType {
        return ImportedFromType()
    }

    /**
     * Create an instance of [EventType]
     *
     */
    fun createEventType(): EventType {
        return EventType()
    }

    /**
     * Create an instance of [InteractantType]
     *
     */
    fun createInteractantType(): InteractantType {
        return InteractantType()
    }

    /**
     * Create an instance of [NameListType]
     *
     */
    fun createNameListType(): NameListType {
        return NameListType()
    }

    /**
     * Create an instance of [ReactionType]
     *
     */
    fun createReactionType(): ReactionType {
        return ReactionType()
    }

    /**
     * Create an instance of [SourceType]
     *
     */
    fun createSourceType(): SourceType {
        return SourceType()
    }

    /**
     * Create an instance of [MoleculeType]
     *
     */
    fun createMoleculeType(): MoleculeType {
        return MoleculeType()
    }

    /**
     * Create an instance of [OrganismNameType]
     *
     */
    fun createOrganismNameType(): OrganismNameType {
        return OrganismNameType()
    }

    /**
     * Create an instance of [SubcellularLocationType]
     *
     */
    fun createSubcellularLocationType(): SubcellularLocationType {
        return SubcellularLocationType()
    }

    /**
     * Create an instance of [SourceDataType.Strain]
     *
     */
    fun createSourceDataTypeStrain(): Strain {
        return Strain()
    }

    /**
     * Create an instance of [SourceDataType.Plasmid]
     *
     */
    fun createSourceDataTypePlasmid(): Plasmid {
        return Plasmid()
    }

    /**
     * Create an instance of [SourceDataType.Transposon]
     *
     */
    fun createSourceDataTypeTransposon(): Transposon {
        return Transposon()
    }

    /**
     * Create an instance of [SourceDataType.Tissue]
     *
     */
    fun createSourceDataTypeTissue(): Tissue {
        return Tissue()
    }

    /**
     * Create an instance of [IsoformType.Name]
     *
     */
    fun createIsoformTypeName(): IsoformType.Name {
        return IsoformType.Name()
    }

    /**
     * Create an instance of [IsoformType.Sequence]
     *
     */
    fun createIsoformTypeSequence(): IsoformType.Sequence {
        return IsoformType.Sequence()
    }

    /**
     * Create an instance of [CommentType.Absorption]
     *
     */
    fun createCommentTypeAbsorption(): Absorption {
        return Absorption()
    }

    /**
     * Create an instance of [CommentType.Kinetics]
     *
     */
    fun createCommentTypeKinetics(): Kinetics {
        return Kinetics()
    }

    /**
     * Create an instance of [CommentType.PhDependence]
     *
     */
    fun createCommentTypePhDependence(): PhDependence {
        return PhDependence()
    }

    /**
     * Create an instance of [CommentType.RedoxPotential]
     *
     */
    fun createCommentTypeRedoxPotential(): RedoxPotential {
        return RedoxPotential()
    }

    /**
     * Create an instance of [CommentType.TemperatureDependence]
     *
     */
    fun createCommentTypeTemperatureDependence(): TemperatureDependence {
        return TemperatureDependence()
    }

    /**
     * Create an instance of [CommentType.Link]
     *
     */
    fun createCommentTypeLink(): Link {
        return Link()
    }

    /**
     * Create an instance of [CommentType.Disease]
     *
     */
    fun createCommentTypeDisease(): Disease {
        return Disease()
    }

    /**
     * Create an instance of [CommentType.Conflict.Sequence]
     *
     */
    fun createCommentTypeConflictSequence(): Conflict.Sequence {
        return Conflict.Sequence()
    }

    /**
     * Create an instance of [OrganismType.Lineage]
     *
     */
    fun createOrganismTypeLineage(): Lineage {
        return Lineage()
    }

    /**
     * Create an instance of [ProteinType.RecommendedName]
     *
     */
    fun createProteinTypeRecommendedName(): RecommendedName {
        return RecommendedName()
    }

    /**
     * Create an instance of [ProteinType.AlternativeName]
     *
     */
    fun createProteinTypeAlternativeName(): AlternativeName {
        return AlternativeName()
    }

    /**
     * Create an instance of [ProteinType.SubmittedName]
     *
     */
    fun createProteinTypeSubmittedName(): SubmittedName {
        return SubmittedName()
    }

    /**
     * Create an instance of [ProteinType.Domain]
     *
     */
    fun createProteinTypeDomain(): Domain {
        return Domain()
    }

    /**
     * Create an instance of [ProteinType.Component]
     *
     */
    fun createProteinTypeComponent(): Component {
        return Component()
    }

    /**
     * Create an instance of [JAXBElement]`<`[String]`>`}
     *
     */
    @XmlElementDecl(namespace = "http://uniprot.org/uniprot", name = "copyright")
    fun createCopyright(value: String): JAXBElement<String> {
        return JAXBElement(_Copyright_QNAME, String::class.java, null, value)
    }

    companion object {
        private val _Copyright_QNAME = QName("http://uniprot.org/uniprot", "copyright")
    }
}